{"version":3,"sources":["queries.js","Components/TopBar.jsx","Components/ViewTeacherDetails.jsx","Components/ViewTeachers.jsx","Components/Login.jsx","Components/AddStudent.jsx","App.js","reportWebVitals.js","index.js"],"names":["TEACHERS_QUERY","gql","TEACHER_INFO","DELETE_STUDENT","LOGIN_QUERY","ADD_STUDENT","TopBar","React","useState","isLoggedIn","setIsLoggedIn","useEffect","Cookie","get","className","to","href","onClick","remove","window","location","reload","ViewTeachers","props","id","useParams","useLazyQuery","variables","teacherId","parseInt","getTeacherInfo","data","loading","teacher","setTeacher","currentTeacherId","setCurrentTeacherId","useMutation","deleteStudent","deleteStudentResponse","loaded","setLoaded","Cookies","title","size","src","name","email","education","itemLayout","dataSource","students","renderItem","item","Item","Meta","avatar","description","subjects","join","type","shape","danger","icon","DeleteOutlined","studentId","_id","token","Link","Typography","useQuery","teachers","setTeachers","index","Login","getToken","setEmail","password","setPassword","set","info","placeholder","onChange","e","target","value","addStudent","setName","setSubjects","error","setError","message","err","split","map","trim","App","path","element","exact","ViewTeacherDetails","AddStudent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","full","protocol","host","client","ApolloClient","uri","test","cache","InMemoryCache","ReactDOM","render","ApolloProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2718f51.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const TEACHERS_QUERY = gql`\n{\n    teachers {\n        name,\n        email,\n        teacherId,\n        education\n    }\n}\n`;\n\nexport const TEACHER_INFO = gql`\n    query Teacher($teacherId: Int!) {\n        teacher (teacherId: $teacherId) {\n            name,\n            email,\n            teacherId,\n            education,\n            students {\n                _id,\n                name,\n                subjects\n            }\n        }\n    }\n`;\n\nexport const DELETE_STUDENT = gql`\n    mutation DeleteStudent ($studentId: String!, $token: String!) {\n        deleteStudent (studentId: $studentId, token: $token) {\n            deletedCount,\n            err\n        }\n    }\n`;\n\nexport const LOGIN_QUERY = gql`\n    query Token ($email: String!, $password: String!) {\n        token (email: $email, password: $password) {\n            token,\n            err,\n            info {\n                teacherId,\n                name\n            }\n        }\n    }\n`;\n\nexport const ADD_STUDENT = gql`\n    mutation AddStudent (\n        $name: String!,\n        $subjects: [String],\n        $token: String!\n    ) {\n        addStudent (\n            name: $name,\n            subjects: $subjects,\n            token: $token\n        ) {\n            err,\n            data {\n                name\n            }\n        }\n    }\n`\n\n","import { Card } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\nimport \"../styles/topbar.css\";\n\nfunction TopBar () {\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    React.useEffect(() => {\n        const token = Cookie.get(\"token\");\n        if (token) {\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    if (isLoggedIn) {\n        return (\n            <Card className=\"topbar-card\">\n                <span className=\"title\">Hi {Cookie.get(\"name\")}</span>\n                <span className=\"is-right\">\n                    <Link to=\"/signin\" className=\"margin-x-5\">Teachers</Link>\n                    <Link to=\"/add-student\" className=\"margin-x-5\">Add Student</Link>\n                    <a\n                        href=\"#logout\"\n                        onClick={() => {\n                            Cookie.remove(\"token\");\n                            Cookie.remove(\"teacherId\");\n                            window.location.reload();\n                        }}\n                        className=\"margin-x-5\"\n                    >\n                        Log Out\n                    </a>\n                </span>\n            </Card>\n        );\n    }\n    else {\n        return (\n            <Card className=\"topbar-card\">\n                <span className=\"is-right\">\n                    <Link to=\"/signin\" className=\"margin-x-5\">Sign In</Link>\n                    <Link to=\"/\" className=\"margin-x-5\">Teachers</Link>\n                </span>\n            </Card>\n        );\n    }\n\n}\n\nexport default TopBar;","import { Card, List, Avatar, Divider, Button, Tooltip } from \"antd\";\nimport { DeleteOutlined } from '@ant-design/icons';\nimport React from \"react\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport \"../styles/teachers.css\";\nimport { TEACHER_INFO, DELETE_STUDENT } from \"../queries\";\nimport { useParams } from \"react-router\";\nimport Cookies from \"js-cookie\";\nimport TopBar from \"./TopBar\";\n\nfunction ViewTeachers (props) {\n\n    const { id } = useParams();\n    const [getTeacherInfo, { data, loading }] = useLazyQuery(TEACHER_INFO, { variables: {teacherId: parseInt(id)} });\n    const [teacher, setTeacher] = React.useState(null);\n    const [currentTeacherId, setCurrentTeacherId] = React.useState(null);\n    const [ deleteStudent, deleteStudentResponse ] = useMutation(DELETE_STUDENT);\n    const [loaded, setLoaded] = React.useState(false);\n    \n\n    React.useEffect(() => {\n        if (loading === false && loaded) {\n            setTeacher(data.teacher);\n        }\n    }, [loading, data]);\n\n    React.useEffect(() => {\n        getTeacherInfo( { variables: {teacherId: parseInt(id)} });\n        setCurrentTeacherId(Cookies.get(\"teacherId\"));\n        setLoaded(true);\n    }, []);\n\n    return (\n        <>\n        <TopBar />\n        <div className=\"teachers-view-container\">\n            <Card\n                title={\n                    <>\n                        <h3>View Teachers</h3>\n                        <p>School Database - Teacher Details</p>\n                    </>\n                }\n            >\n                <div className=\"teacher-info-container\">\n                    <div>\n                        <Avatar size={128} src=\"https://joeschmoe.io/api/v1/random\" />\n                    </div>\n                    <div>\n                        <h2>{ teacher?.name }</h2>\n                        <h4>{ teacher?.email }</h4>\n                        <h4>{ teacher?.education } - <i>ID: {teacher?.teacherId}</i></h4>\n                    </div>\n                </div>\n                <Divider />\n                    <h2>\n                        Students\n                    </h2>\n                <Divider />\n                <List\n                    itemLayout=\"horizontal\"\n                    dataSource={teacher?.students || []}\n                    loading={loading || deleteStudentResponse.loading}\n                    renderItem={item => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\n                                title={item.name}\n                                description={item.subjects.join(\", \")}\n                            />\n                            <div>\n                                <Tooltip title=\"Delete Student\">\n                                    {\n                                        parseInt(currentTeacherId) === parseInt(teacher.teacherId) ?\n                                    <Button \n                                        type=\"primary\" \n                                        className=\"margin-x-5\" \n                                        shape=\"circle\" \n                                        danger \n                                        icon={<DeleteOutlined />} \n                                        onClick={() => {\n                                            deleteStudent({\n                                                variables: {\n                                                studentId: item._id,\n                                                token: Cookies.get(\"token\") || \"\"\n                                            }});\n                                            getTeacherInfo( { variables: {teacherId: parseInt(id)} });\n                                        }}\n                                    /> : null\n                                    }\n                                </Tooltip>\n                            </div>\n                      </List.Item>\n                    )}\n                />\n            </Card>\n        </div>\n        </>\n    )\n}\n\nexport default ViewTeachers;","import { Card, List, Avatar, Typography } from \"antd\";\nimport React from \"react\";\nimport \"../styles/teachers.css\";\nimport TopBar from \"./TopBar\";\nimport { TEACHERS_QUERY } from \"../queries\";\nimport { useQuery } from \"@apollo/client\";\n\nconst { Link } = Typography;\n\nfunction ViewTeachers () {\n    const { data, loading, } = useQuery(TEACHERS_QUERY);\n    const [teachers, setTeachers] = React.useState([]);\n\n    React.useEffect(() => {\n        if (loading === false) {\n            setTeachers(data.teachers);\n        }\n    }, [data, loading]);\n\n    return (\n        <>\n        <TopBar />\n        <div className=\"teachers-view-container\">\n            <Card\n                title={\n                    <>\n                        <h3>View Teachers</h3>\n                        <p>School Database - List of All Teachers</p>\n                    </>\n                }\n            >\n                <List\n                    itemLayout=\"horizontal\"\n                    loading={loading}\n                    dataSource={teachers}\n                    renderItem={(item, index) => (\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" />}\n                                title={item.name}\n                                description={item.email + \" - \" + item.education}\n                            />\n                            <div>\n                                <Link href=\"mailto:john.doe@example.com\" className=\"margin-x-5\">Contact</Link>\n                                <Link href={`teacher/${index+1}`} className=\"margin-x-5\">Details</Link>\n                            </div>\n                      </List.Item>\n                    )}\n                />\n            </Card>\n        </div>\n        </>\n    )\n}\n\nexport default ViewTeachers;","import React from \"react\";\nimport { Card, Input, Button, } from \"antd\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport Cookies from \"js-cookie\";\nimport { LOGIN_QUERY } from \"../queries\";\n\nfunction Login () {\n\n    const [getToken, { loading, data }] = useLazyQuery(LOGIN_QUERY);\n    const [email, setEmail] = React.useState(\"\");\n    const [password, setPassword] = React.useState(\"\");\n\n    React.useEffect(() => {\n        if (loading === false && data?.token) {\n            Cookies.set(\"token\", data?.token?.token);\n            Cookies.set(\"teacherId\", data?.token?.info?.teacherId);\n            Cookies.set(\"name\", data?.token?.info?.name);\n            window.location = \"./\";\n        }\n    }, [loading, data]);\n\n    return (\n        <div className=\"login-container\">\n            <Card \n                title=\"Login\" \n                className=\"login-form\"\n            >\n                <Input \n                    placeholder=\"Email\"\n                    className=\"app-input\"\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <Input \n                    placeholder=\"Password\"\n                    type=\"password\"\n                    className=\"app-input\"\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                \n                <Button \n                    type=\"primary\" \n                    shape=\"round\" \n                    size={26}\n                    className=\"login-button\"\n                    onClick={() => {\n                        getToken({\n                            variables: {\n                                email,\n                                password\n                            }\n                        })\n                    }}\n                >\n                    Log In\n                </Button>\n            </Card>\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport { Card, Input, Button, Alert } from \"antd\";\nimport { useMutation } from \"@apollo/client\";\nimport Cookies from \"js-cookie\";\nimport { ADD_STUDENT } from \"../queries\";\nimport TopBar from \"./TopBar\";\n\nfunction Login () {\n\n    const [addStudent, { data, loading }] = useMutation(ADD_STUDENT);\n    const [name, setName] = React.useState(\"\");\n    const [subjects, setSubjects] = React.useState(\"\");\n    const [error, setError] = React.useState(\"\");\n\n    return (\n        <>\n        <TopBar />\n        <div className=\"login-container\">\n            <Card \n                title=\"Add Student\" \n                className=\"login-form\"\n            >\n                {\n                    loading === false && data?.addStudent?.data?.name ? \n                    <Alert message=\"Student Added\" type=\"success\" />\n                    : loading === false && data?.addStudent?.data?.err ?\n                    <Alert message={data?.addStudent?.data?.err} type=\"error\" />\n                    : error ?\n                    <Alert message={error} type=\"error\" />\n                    : null\n                }\n                <br/>\n                <Input \n                    placeholder=\"Student Name\"\n                    className=\"app-input\"\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <Input \n                    placeholder=\"Subjects (like Maths, English)\"\n                    className=\"app-input\"\n                    onChange={(e) => setSubjects(e.target.value)}\n                />\n                \n                <Button \n                    type=\"primary\" \n                    shape=\"round\" \n                    size={26}\n                    className=\"login-button\"\n                    onClick={() => {\n                        if (Cookies.get(\"token\")) {\n                        addStudent({\n                            variables: {\n                                name,\n                                subjects: subjects.split(\",\").map(function(item) {\n                                    return item.trim();\n                                }),\n                                token: Cookies.get(\"token\")\n                            }\n                        })\n                        } else setError(\"Login to add student\")\n                    }}\n                >\n                    Add\n                </Button>\n            </Card>\n        </div>\n        </>\n    )\n}\n\nexport default Login;","import './App.css';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport ViewTeacherDetails from './Components/ViewTeacherDetails';\nimport ViewTeachers from './Components/ViewTeachers';\nimport Login from './Components/Login';\nimport AddStudent from \"./Components/AddStudent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/signin\" element={<Login />} />\n          <Route exact path=\"/\" element={<ViewTeachers />} />\n          <Route exact path=\"/teacher/:id\" element={<ViewTeacherDetails />} />\n          <Route exact path=\"/add-student\" element={<AddStudent />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst full = window.location.protocol + '//' + window.location.host;\n\nconst client = new ApolloClient({\n  uri: /localhost/.test(window.location) ? \"http://localhost:8085/api\" : full + \"/api\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}